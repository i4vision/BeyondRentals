version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=postgresql://checkin_user:checkin_password@postgres:5432/checkin_db
      # MinIO S3-compatible object storage
      - STORAGE_TYPE=minio
      - MINIO_ENDPOINT=minio:9000
      - MINIO_PUBLIC_ENDPOINT=localhost:5001
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_BUCKET=${MINIO_BUCKET:-checkin-uploads}
      - MINIO_USE_SSL=false
      # Session secret
      - SESSION_SECRET=${SESSION_SECRET:-your-super-secret-session-key-change-this-in-production}
      # Pre-fill token security (REQUIRED)
      - TOKEN_SECRET=${TOKEN_SECRET}
      # Public URL for generated links (optional, defaults to request URL)
      - PUBLIC_URL=${PUBLIC_URL:-https://byr.i4vision.us}
    volumes:
      # Mount uploads directory for file storage
      - ./uploads:/app/uploads
      # Mount logs directory
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - checkin-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=checkin_db
      - POSTGRES_USER=checkin_user
      - POSTGRES_PASSWORD=checkin_password
    ports:
      - "5432:5432"
    volumes:
      # Persist database data
      - postgres_data:/var/lib/postgresql/data
      # Optional: mount init scripts
      - ./docker/postgres-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U checkin_user -d checkin_db"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - checkin-network

  # MinIO S3-compatible object storage
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "5001:9000"  # API port (external:internal)
      - "9001:9001"  # Console UI port
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - checkin-network

  # MinIO bucket creation service (runs once to create bucket)
  minio-init:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_ACCESS_KEY:-minioadmin} ${MINIO_SECRET_KEY:-minioadmin};
      /usr/bin/mc mb myminio/${MINIO_BUCKET:-checkin-uploads} --ignore-existing;
      /usr/bin/mc anonymous set download myminio/${MINIO_BUCKET:-checkin-uploads};
      exit 0;
      "
    networks:
      - checkin-network

volumes:
  postgres_data:
  minio_data:

networks:
  checkin-network:
    driver: bridge