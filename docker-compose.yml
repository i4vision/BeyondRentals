version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=postgresql://checkin_user:checkin_password@postgres:5432/checkin_db
      # Object storage environment variables (update these with your actual values)
      - DEFAULT_OBJECT_STORAGE_BUCKET_ID=${DEFAULT_OBJECT_STORAGE_BUCKET_ID:-your-bucket-id}
      - PRIVATE_OBJECT_DIR=${PRIVATE_OBJECT_DIR:-/your-bucket/private}
      - PUBLIC_OBJECT_SEARCH_PATHS=${PUBLIC_OBJECT_SEARCH_PATHS:-/your-bucket/public}
      # Session secret
      - SESSION_SECRET=${SESSION_SECRET:-your-super-secret-session-key-change-this-in-production}
    volumes:
      # Mount uploads directory for file storage
      - ./uploads:/app/uploads
      # Mount logs directory
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - checkin-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=checkin_db
      - POSTGRES_USER=checkin_user
      - POSTGRES_PASSWORD=checkin_password
    ports:
      - "5432:5432"
    volumes:
      # Persist database data
      - postgres_data:/var/lib/postgresql/data
      # Optional: mount init scripts
      - ./docker/postgres-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U checkin_user -d checkin_db"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - checkin-network

  # Optional: Redis for session storage (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - checkin-network

volumes:
  postgres_data:
  # redis_data:

networks:
  checkin-network:
    driver: bridge